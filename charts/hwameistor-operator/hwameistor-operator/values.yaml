global:
  targetNamespace: hwameistor
  notClaimDisk: false
  hwameistorImageRegistry: ghcr.m.daocloud.io
  #hwameistorImageRegistry: ghcr.m.daocloud.io
  k8sImageRegistry: m.daocloud.io/registry.k8s.io
  # k8sImageRegistry: m.daocloud.io/registry.k8s.io
  hwameistorVersion: v0.14.1

operator:
  replicas: 1
  imageRepository: hwameistor/operator
  tag: v0.14.1
 
localDiskManager:
  tolerationOnMaster: true
  kubeletRootDir: /var/lib/kubelet
  manager:
    imageRepository: hwameistor/local-disk-manager
    tag: v0.14.1
    resources:
      limits:
        cpu: 300m
        memory: 300Mi
      requests:
        cpu: 1m
        memory: 20Mi
  csi:
    registrar:
      imageRepository: sig-storage/csi-node-driver-registrar
      tag: v2.5.0
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 1m
          memory: 20Mi
    controller:
      replicas: 1
    provisioner:
      imageRepository: sig-storage/csi-provisioner
      tag: v2.0.3
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 1m
          memory: 20Mi
    attacher:
      imageRepository: sig-storage/csi-attacher
      tag: v3.0.1
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 1m
          memory: 20Mi

localStorage:
  disable: false
  tolerationOnMaster: true
  kubeletRootDir: /var/lib/kubelet
  member:
    imageRepository: hwameistor/local-storage
    tag: v0.14.1
    resources:
      limits:
        cpu: 500m
        memory: 500Mi
      requests:
        cpu: 1m
        memory: 20Mi
    hostPathSSHDir: /root/.ssh
    hostPathDRBDDir: /etc/drbd.d
  csi:
    registrar:
      imageRepository: sig-storage/csi-node-driver-registrar
      tag: v2.5.0
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 1m
          memory: 20Mi
    controller:
      replicas: 1
    provisioner:
      imageRepository: sig-storage/csi-provisioner
      tag: v3.5.0
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 1m
          memory: 20Mi
    attacher:
      imageRepository: sig-storage/csi-attacher
      tag: v3.0.1
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 1m
          memory: 20Mi
    resizer:
      imageRepository: sig-storage/csi-resizer
      tag: v1.0.1
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 1m
          memory: 20Mi
    monitor:
      imageRepository: sig-storage/csi-external-health-monitor-controller
      tag: v0.8.0
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 1m
          memory: 20Mi
    snapshotController:
      imageRepository: sig-storage/snapshot-controller
      tag: v6.0.0
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 1m
          memory: 20Mi
    snapshotter:
      imageRepository: sig-storage/csi-snapshotter
      tag: v6.0.0
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 1m
          memory: 20Mi
  migrate:
    rclone:
      imageRepository: rclone/rclone
      tag: 1.53.2
    juicesync:
      imageRepository: hwameistor/hwameistor-juicesync
      tag: v1.0.4-01
  snapshot:
    disable: false

scheduler:
  disable: false
  replicas: 1
  imageRepository: hwameistor/scheduler
  tag: v0.14.1
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 1m
      memory: 20Mi

admission:
  disable: false
  replicas: 1
  imageRepository: hwameistor/admission
  tag: v0.14.1
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 1m
      memory: 20Mi
  # failurePolicy defines how unrecognized errors from the admission endpoint
  # are handled - allowed values are Ignore or Fail. Defaults to Fail.
  failurePolicy: "Ignore"
  
evictor:
  disable: true
  replicas: 0
  imageRepository: hwameistor/evictor
  tag: v0.14.1
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 1m
      memory: 20Mi

apiserver:
  disable: false
  replicas: 1
  imageRepository: hwameistor/apiserver
  tag: v0.14.1
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 1m
      memory: 20Mi
  authentication:
    enable: false
    accessId: admin
    secretKey: admin

exporter:
  disable: false
  replicas: 1
  imageRepository: hwameistor/exporter
  tag: v0.14.1
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 1m
      memory: 20Mi

auditor:
  disable: false
  replicas: 1
  imageRepository: hwameistor/auditor
  tag: v0.14.1
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 1m
      memory: 20Mi

failoverAssistant:
  disable: false
  replicas: 1
  imageRepository: hwameistor/failover-assistant
  tag: v0.14.1
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 1m
      memory: 20Mi

pvcAutoResizer:
  disable: false
  replicas: 1
  imageRepository: hwameistor/pvc-autoresizer
  tag: v0.14.1
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 1m
      memory: 20Mi

localDiskActionController:
  disable: false
  replicas: 1
  imageRepository: hwameistor/local-disk-action-controller
  tag: v0.14.1
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 1m
      memory: 20Mi

ui:
  disable: false
  replicas: 1
  imageRepository: hwameistor/hwameistor-ui
  tag: v0.15.1
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 1m
      memory: 20Mi

ha:
  disable: false
  module: drbd
  deployOnMaster: "yes"
  imageRepoOwner: hwameistor
  drbdVersion: v9.0.32-1

# diskReserve example
# diskReserve: 
# - nodeName: node1
#   devices:
#   - /dev/sdc
#   - /dev/sdd
# - nodeName: node2
#   devices:
#   - /dev/sdc
#   - /dev/sde

# diskReserve example by json string
# diskReserve: [{"nodeName":"node1","devices":["/dev/sdc","/dev/sdc"]},{"nodeName":"node2","devices":["/dev/sdc","/dev/sde"]}]

# diskReserve example for helm install --set
# --set diskReserve\[0\].nodeName=node1 --set diskReserve\[0\].devices={/dev/sdc\,/dev/sdd} --set diskReserve\[1\].nodeName=node2 --set diskReserve\[1\].devices={/dev/sdc\,/dev/sde}

preHookJob:
  imageRepository: dtzar/helm-kubectl
  tag: 3.9